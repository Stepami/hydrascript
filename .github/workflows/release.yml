name: Release Workflow

on:
  push:
    branches:
      - 'release'

jobs:
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      determined_version: ${{ steps.version_step.outputs.majorMinorPatch }}
      publish_version: ${{ steps.version_step.outputs.publishVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Determine Version
        id: version_step
        run: |
          tag=$( git describe --tags --abbrev=0 )
          echo "majorMinorPatch=$tag" >> $GITHUB_OUTPUT
          echo "publishVersion=${tag:1}" >> $GITHUB_OUTPUT
      - name: Setup GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup@v3.0.0
        with:
          versionSpec: '0.18.x'
      - name: Create release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/create@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: 'Stepami'
          repository: 'hydrascript'
          milestone: ${{ steps.version_step.outputs.majorMinorPatch }}
          name: ${{ steps.version_step.outputs.majorMinorPatch }}

  upload-release-assets:
    name: Upload release assets
    needs: create-release
    outputs:
      determined_version: ${{ needs.create-release.outputs.determined_version }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            rid: linux-x64
          - os: macos-latest
            rid: osx-arm64
          - os: windows-latest
            rid: win-x64
    runs-on: ${{ matrix.config.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            7.0.x
            9.0.x
      - name: Setup GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup@v3.0.0
        with:
          versionSpec: '0.18.x'
      - name: Publish
        run: |
          mkdir output
          dotnet publish ./src/HydraScript/HydraScript.csproj -r ${{ matrix.config.rid }} -p:Version=${{ needs.create-release.outputs.publish_version }} -o ./output
      - name: Rename Executable
        run: mv ./output/HydraScript${{ matrix.config.rid == 'win-x64' && '.exe' || '' }} ./output/hydrascript_${{ matrix.config.rid }}${{ matrix.config.rid == 'win-x64' && '.exe' || '' }}
      - name: Add asset to a release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/addasset@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: 'Stepami'
          repository: 'hydrascript'
          milestone: ${{ needs.create-release.outputs.determined_version }}
          assets: ./output/hydrascript_${{ matrix.config.rid }}${{ matrix.config.rid == 'win-x64' && '.exe' || '' }}

  publish-release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: upload-release-assets
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x
      - name: Setup GitReleaseManager
        uses: gittools/actions/gitreleasemanager/setup@v3.0.0
        with:
          versionSpec: '0.18.x'
      - name: Publish release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/publish@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: 'Stepami'
          repository: 'hydrascript'
          milestone: ${{ needs.upload-release-assets.outputs.determined_version }}
      - name: Close release with GitReleaseManager
        uses: gittools/actions/gitreleasemanager/close@v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: 'Stepami'
          repository: 'hydrascript'
          milestone: ${{ needs.upload-release-assets.outputs.determined_version }}